<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Centos7+Hexo+Nginx个人博客踩坑日记]]></title>
    <url>%2F2018%2F01%2F31%2FCentos7%2BHexo%2BNginx%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%B8%A9%E5%9D%91%E6%97%A5%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[前言 本文参照网上各种blog，按照个人习惯编写，环境如题示，在win10下操作；踩过几个坑，后续会更新，写的不到位的还请各位看官见谅~ 推荐参考文章：Git+Nginx+Centos7、或者Hexo博客搭建 步骤一：购买VPS 国内：腾讯、阿里等 国外：Vultr、Bandwagon、Digital ocean等 Notes:个人使用的搬瓦工的，已经用了三年了，之前之前只是为了去看看外面的世界，买的OVZ的；这次正好赶上Bandwagon$19.99/year的套餐有库存，赶紧入手了一波KVM的；相关OVZ与KVM的优劣等请自行百度或者参考这篇文章 步骤二：本地配置安装Git、Node.js Windows直接下载对应安装包Git、Node.js Mac、linux安装方法可自行搜索 Hexo安装与配置 打开Git Bash，输入下列命令安装Hexo 1npm install -g hexo-cli 选择一个文件夹，作为你本地博客目录，例如D:/blog 123hexo init blog #blog为上述博客目录cd blognpm install 安装hexo deploy-git插件： 1npm install hexo-deployer-git --save 步骤三：服务器安装Nginx 使用ssh登陆软件如Putty、Xshell、SecureCRT等远程连接你的VPS Centos7默认的包管理器yum里没有Nginx包，自行添加： 1sudo yum install epel-release 然后安装Nginx： 1sudo yum install nginx 若此处安装失败，则重新执行下列命令：12sudo rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpmsudo yum install nginx Nginx校验： 12nginx -v #返回nginx version: nginx/x.x.x则成功 在/etc/nginx/conf.d/目录下创建Hexo配置文件hexo.conf并配置如下： 12345678server &#123; root /var/www/git/public; # 站点目录 index index.html index.htm; # 主页 server_name www.example.com example.com; # 填你的域名 location / &#123; # 当输入的网址不存在时，会尝试重定向到404页面 try_files $uri $uri/ /404/; &#125;&#125; 修改nginx配置文件 1vi /etc/nginx/nginx.conf 在http{}的include /etc/nginx/conf.d/*.conf后面加入如下代码： 1include /var/www/*.conf; 启动Nginx服务： 12service nginx reload/etc/init.d/nginx start 若无错误提示信息则说明Nginx启动成功。 步骤四：创建网站管理用户git(可自定义名字)本地生成ssh key 在Git Bash中输入： 1ssh-keygen -t rsa -C "xx@xx.com" 执行命令后，会在C:\Users\{user-name}\.ssh中生成下列文件： id_rsa //私钥 id_rsa.pub //公钥 服务器上增加用户git，用以专门管理网站 新增git用户： 1234groupadd sitesManagers #创建用户组useradd git -m -g sitesManagers #将git用户加入用户组passwd git #设置密码chmod 755 /home/git 切换用户 1su git 创建authorized_keys文件： 1234cd /home/git #进入用户根目录mkdir .sshcd .sshvi authorized_keys 将上面第一部生成的公钥id_rsa.pub中的内容复制到authorized_keys中并保存。 此处涉及vim操作的简单命令，i为插入内容，ESC进入命令模式，:wq保存修改并退出，:q!忽略修改并退出，相关内容可自行搜索。 修改权限： 12chmod 700 ~/.sshchmod 600 ~/.ssh/authorized_keys 常见文件权限有：777、755、600等，详情可自行搜索或参见我后续博客 打开windows cmd，输入： 1ssh git@server-ip #server-ip为你服务器的IP 若连接成功则上述配置OK了。 步骤五：服务器创建仓库并修改相应配置 Nginx默认web目录为/usr/share/nginx/html，我们此次将博客目录配置为/var/www/git/public，git仓库路径为/home/git/hexo.git。另外，Nginx的配置目录在/etc/nginx，后面需要用到。 创建博客目录 12345cd /varmkdir wwwchmod 777 wwwsu gitmkdir -p /var/www/git/public 此时可输入：echo &quot;Test Html &gt; index.html&quot;后在浏览器中输入在Hexo.conf中给的地址www.example.com，查看是否会出现Test Html。 测试完后执行rm index.html删除测试文件。 安装git并初始化、配置git仓库 安装Git： 1yum install git 为避免后续deploy的问题，修改VPS的ssh端口号为22（ssh默认端口号为22）： 1vi /etc/ssh/sshd_config 下拉至最后一行,改为： 1Port 22 初始化Git仓库： 12345su gitcd /home/gitmkdir Hexo.gitcd Hexo.gitgit init --bare 配置Git仓库 12341. cd hooks2. touch post-receive3. chmod 755 post-receive4. vi post-receive 输入以下内容：12345678#!/bin/bash -lGIT_REPO=/home/git/Hexo.git # Git仓库TMP_GIT_CLONE=/tmp/gitBlogPUBLIC_WWW=/var/www/git/public # 站点目录rm -rf $&#123;TMP_GIT_CLONE&#125;git clone $GIT_REPO $TMP_GIT_CLONErm -rf $&#123;PUBLIC_WWW&#125;/*cp -rf $&#123;TMP_GIT_CLONE&#125;/* $&#123;PUBLIC_WWW&#125; 步骤六：本地站点文件配置 进入D:/blog文件夹，修改_config.yml末尾为： 1234deploy: type: git repo: git@your_vps_ip:Hexo.git #your_vps_ip为你的VPS的IP branch: master 将blog部署到服务器： 1hexo g -d 至此，前期工作就已完成，后续Hexo主体选择与优化等参见后续博客]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F01%2F28%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo常用命令]]></title>
    <url>%2F2016%2F12%2F01%2Fhexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[HEXO配置More info: 点这成大牛 hexo123npm install hexo -g #安装npm update hexo -g #升级hexo init #初始化 简写hexo n “我的博客” == hexo new “我的博客” #新建文章hexo p == hexo publishhexo g == hexo generate#生成hexo s == hexo server #启动服务预览hexo d == hexo deploy#部署 服务器hexo server #Hexo 会监视文件变动并自动更新，您无须重启服务器。hexo server -s #静态模式hexo server -p 5000 #更改端口hexo server -i 192.168.1.1 #自定义 IP hexo clean #清除缓存 网页正常情况下可以忽略此条命令hexo g #生成静态网页hexo d #开始部署 完成后部署| 两个命令的作用是相同的| hexo generate –deploy| hexo deploy –generate 12hexo deploy -ghexo server -g 写作12hexo new page &lt;title&gt;hexo new post &lt;title&gt; 推送到服务器上123hexo n #写文章hexo g #生成hexo d #部署 #可与hexo g合并为 hexo d -g RSS安装RSS插件1npm install hexo-generator-feed --save 开启RSS功能编辑hexo/_config.yml，添加如下代码：1rss: /atom.xml #rss地址 默认即可]]></content>
      <categories>
        <category>Learning</category>
      </categories>
      <tags>
        <tag>Learning</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo常用命令]]></title>
    <url>%2F2016%2F12%2F01%2F%E7%BA%AA%E5%BF%B5%E4%B8%80%E4%B8%AA%E8%B5%B7%E7%82%B9%2F</url>
    <content type="text"></content>
      <categories>
        <category>Sundry</category>
      </categories>
      <tags>
        <tag>Sundry</tag>
      </tags>
  </entry>
</search>
